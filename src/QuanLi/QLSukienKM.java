/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package QuanLi;

import DataBase.DBAccess;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Administrator
 */
public class QLSukienKM extends javax.swing.JFrame {
    Connection con;
    public PreparedStatement pet,pet1;
    public static ResultSet rs = null ,rs1 = null;

    /**
     * Creates new form QLSukienKM
     */
    public QLSukienKM() {
        initComponents();
        ButtonGroup group = new ButtonGroup();
        group.add(rdbDong);
        group.add(rdbMo);
        rdbDong.setSelected(true);
        LoadData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabKhuyenmai = new javax.swing.JTable();
        btnSua = new javax.swing.JButton();
        btnThoat = new javax.swing.JButton();
        rdbMo = new javax.swing.JRadioButton();
        rdbDong = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        txtMaKM = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtDipKM = new javax.swing.JTextPane();
        spinSoLuong = new javax.swing.JSpinner();
        txtMucKM = new javax.swing.JTextField();
        btnThem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Quản lí khuyến mãi");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setText("Sự kiện khuyến mãi");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(326, 13, -1, -1));

        jLabel2.setText("Mã khuyến mãi");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(68, 77, -1, -1));

        jLabel3.setText("Dịp khuyến mãi");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 130, -1, -1));

        jLabel4.setText("Số lượng");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 189, -1, -1));

        jLabel5.setText("Mức khuyến mãi");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 80, -1, -1));

        tabKhuyenmai.setForeground(new java.awt.Color(0, 0, 153));
        tabKhuyenmai.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã khuyến mãi", "Dịp khuyến mãi", "Mức khuyến mãi", "Số lượng", "Tình trạng"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabKhuyenmai.getTableHeader().setReorderingAllowed(false);
        tabKhuyenmai.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabKhuyenmaiMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabKhuyenmai);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, 830, 180));

        btnSua.setBackground(new java.awt.Color(255, 255, 0));
        btnSua.setForeground(new java.awt.Color(255, 0, 0));
        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Upload/Upload_16x16.png"))); // NOI18N
        btnSua.setText("Cập nhật");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });
        getContentPane().add(btnSua, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 440, -1, -1));

        btnThoat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Undo/Undo_16x16.png"))); // NOI18N
        btnThoat.setText("Thoát");
        btnThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThoatActionPerformed(evt);
            }
        });
        getContentPane().add(btnThoat, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 439, -1, -1));

        rdbMo.setText("Mở");
        getContentPane().add(rdbMo, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 140, -1, -1));

        rdbDong.setText("Đóng");
        getContentPane().add(rdbDong, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 140, -1, -1));

        jLabel6.setText("Tình trạng");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 140, -1, -1));

        txtMaKM.setForeground(new java.awt.Color(0, 0, 153));
        getContentPane().add(txtMaKM, new org.netbeans.lib.awtextra.AbsoluteConstraints(194, 74, 120, -1));

        txtDipKM.setForeground(new java.awt.Color(0, 0, 153));
        jScrollPane2.setViewportView(txtDipKM);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(194, 114, 213, 45));

        spinSoLuong.setModel(new javax.swing.SpinnerNumberModel(1, null, null, 1));
        getContentPane().add(spinSoLuong, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 189, 70, -1));
        getContentPane().add(txtMucKM, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 80, 110, -1));

        btnThem.setBackground(new java.awt.Color(255, 255, 0));
        btnThem.setForeground(new java.awt.Color(255, 0, 0));
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Add/Add_16x16.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        getContentPane().add(btnThem, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 440, -1, -1));

        btnXoa.setBackground(new java.awt.Color(255, 255, 0));
        btnXoa.setForeground(new java.awt.Color(255, 0, 0));
        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Delete/Delete_16x16.png"))); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        getContentPane().add(btnXoa, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 440, -1, -1));

        btnRefresh.setBackground(new java.awt.Color(255, 255, 0));
        btnRefresh.setForeground(new java.awt.Color(255, 0, 0));
        btnRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Refresh/Refresh_16x16.png"))); // NOI18N
        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });
        getContentPane().add(btnRefresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 439, -1, -1));

        jLabel7.setForeground(new java.awt.Color(0, 0, 153));
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/imageQLKM.jpg"))); // NOI18N
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 870, 480));

        pack();
    }// </editor-fold>//GEN-END:initComponents

     public void LoadData () 
    {
        DBAccess acc = new DBAccess();
        acc.connect();
        try { 
            int sl = 0;
            rs = acc.DataKhuyenMai();
            String arr[] = {"Mã khuyến mãi","Dịp khuyến mãi","Mức khuyến mãi","Số lượng","Tình trạng"};
            DefaultTableModel model = new DefaultTableModel(arr,0);
            while(rs.next())
            {   
                Vector vec = new Vector();
                vec.add(rs.getString("IDKM"));
                vec.add(rs.getString("DipKhuyenMai"));
                vec.add(rs.getInt("MucKM")); 
                vec.add(rs.getInt("SoLuong"));
                vec.add(rs.getNString("TinhTrangKM"));
                sl = rs.getInt("SoLuong");
                model.addRow(vec);
            }
            if(sl == 0)
            {
                acc.Update("update KhuyenMai set TinhTrangKM = N'Đóng' where SoLuong = '0'");
            }
            tabKhuyenmai.setModel(model);
            rs.close();
        }
        catch(Exception ex)
        {
            Logger.getLogger(QLSukienKM.class.getName()).log(Level.SEVERE, null, ex);
        }
        rdbMo.setEnabled(false);
    }
    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        DBAccess acc = new DBAccess();
        acc.connect();
        if(spinSoLuong.getValue().hashCode() > 100 || spinSoLuong.getValue().hashCode() <= 0)
        {
            JOptionPane.showMessageDialog(this, "Số lượng sản phẩm ngoài khả năng !!!");
            spinSoLuong.setValue(1);
        }
        else
        {
            if(txtDipKM.getText().equals("") || txtMucKM.getText().equals("") )
            {
                JOptionPane.showMessageDialog(this, "vui lòng điền đầy đủ thông tin");
            }
            else
            {
                String TinhTrangKM;
                String IDKM ;
                String DipKM ;
                int MucKM ;
                int SoLuong ;
                try {
                    rs1 = acc.Query("select COUNT(TinhTrangKM) as SL FROM KhuyenMai WHERE TinhTrangKM = N'Mở'");
                    while(rs1.next())
                    {
                        int TTKM = rs1.getInt("SL");
                        if(TTKM < 1)
                        {
                            ButtonGroup group = new ButtonGroup();
                            group.add(rdbDong);
                            group.add(rdbMo);
                            if(rdbDong.isSelected() == true)
                            {
                                TinhTrangKM = rdbDong.getText();
                            }
                            else
                            {
                                TinhTrangKM = rdbMo.getText();
                            }
                            IDKM = txtMaKM.getText();
                            DipKM = txtDipKM.getText();
                            MucKM =  Integer.parseInt(txtMucKM.getText());
                            SoLuong = (int) spinSoLuong.getValue();
                            acc.Update("update KhuyenMai set DipKhuyenMai = N'"+DipKM+"',MucKM = '"+MucKM+"',SoLuong = '"+SoLuong+"',TinhTrangKM = N'"+TinhTrangKM+"' where IDKM = '"+IDKM+"'");
                        }
                        else
                        {
                            if(TTKM == 1 && rdbDong.isSelected() == true)
                            {
                                ButtonGroup group = new ButtonGroup();
                                group.add(rdbDong);
                                group.add(rdbMo);
                                if(rdbDong.isSelected() == true)
                                {
                                    TinhTrangKM = rdbDong.getText();
                                }
                                else
                                {
                                    TinhTrangKM = rdbMo.getText();
                                }
                                IDKM = txtMaKM.getText();
                                DipKM = txtDipKM.getText();
                                MucKM =  Integer.parseInt(txtMucKM.getText());
                                SoLuong = (int) spinSoLuong.getValue();
                                acc.Update("update KhuyenMai set DipKhuyenMai = N'"+DipKM+"',MucKM = '"+MucKM+"',SoLuong = '"+SoLuong+"',TinhTrangKM = N'"+TinhTrangKM+"' where IDKM = '"+IDKM+"'");
                            }
                            else
                            {
                                JOptionPane.showMessageDialog(null, "Chỉ có 1 event khuyến mãi được mở trong cùng 1 thời điểm !! ");
                                rdbDong.setSelected(true);
                                rdbMo.setSelected(false);
                            }         
                        }
                        LoadData();              
                    }
                } catch(Exception e){}
            }
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        DBAccess acc = new DBAccess();
        acc.connect();
        int remove = tabKhuyenmai.getSelectedRow();
        if(remove == -1)
        {
            JOptionPane.showMessageDialog(null, "vui lòng chọn 1 dòng để xóa !!!");
        }
        else
        {
            try {
                String IDKM = txtMaKM.getText();
                acc.deleteKM(IDKM);
            } catch (SQLException ex) {
                Logger.getLogger(QLSukienKM.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        LoadData();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThoatActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_btnThoatActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        spinSoLuong.setValue(1);
        txtMaKM.setText("");
        txtDipKM.setText("");
        txtMucKM.setText("");
        rdbDong.setSelected(true);
        txtMaKM.setEditable(true);
        rdbMo.setEnabled(false);
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void tabKhuyenmaiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabKhuyenmaiMouseClicked
        // TODO add your handling code here:
        int i = tabKhuyenmai.getSelectedRow();
        TableModel model = tabKhuyenmai.getModel();
        txtMaKM.setText(model.getValueAt(i, 0).toString());
        txtDipKM.setText(model.getValueAt(i, 1).toString());
        txtMucKM.setText(model.getValueAt(i, 2).toString());
        spinSoLuong.setValue(model.getValueAt(i, 3).hashCode());
        ButtonGroup group = new ButtonGroup();
        group.add(rdbDong);
        group.add(rdbMo);
        if(model.getValueAt(i, 4).toString().equals("Đóng"))
        {
            rdbDong.setSelected(true);
            rdbMo.setSelected(false);
        }
        else
        {
            rdbMo.setSelected(true);
            rdbDong.setSelected(false);  
        }
        txtMaKM.setEditable(false);
        rdbMo.setEnabled(true);
    }//GEN-LAST:event_tabKhuyenmaiMouseClicked

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        DBAccess acc = new DBAccess();
        acc.connect();
        if(spinSoLuong.getValue().hashCode() > 100 || spinSoLuong.getValue().hashCode() <= 0)
        {
            JOptionPane.showMessageDialog(this, "Số lượng sản phẩm ngoài khả năng !!!");
            spinSoLuong.setValue(1);
        }
        else
        {
            if(txtMaKM.getText().equals("") || txtDipKM.getText().equals("") || txtMucKM.getText().equals(""))
            {
                JOptionPane.showMessageDialog(this, "vui lòng điền đầy đủ thông tin");
            }
            else
            {
                ButtonGroup group = new ButtonGroup();
                group.add(rdbDong);
                group.add(rdbMo);
                String TinhTrangKM = null;
                if(rdbDong.isSelected() == true)
                {
                    TinhTrangKM = rdbDong.getText();
                }
                else
                {
                    TinhTrangKM = rdbMo.getText();
                }
                String IDKM = txtMaKM.getText();
                String DipKM = txtDipKM.getText();
                int MucKM = Integer.parseInt(txtMucKM.getText());
                int SoLuong = (int) spinSoLuong.getValue();;
                ResultSet rs = acc.Query("select IDKM from KhuyenMai where IDKM = '"+IDKM+"'");
                try {
                    if(rs.next())
                    {
                        JOptionPane.showMessageDialog(this, "Mã sản phẩm đã tồn tại !!!");
                    }
                    else
                    {
                        acc.InsertKM(IDKM, DipKM, MucKM, SoLuong, TinhTrangKM);
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(QLSukienKM.class.getName()).log(Level.SEVERE, null, ex);
                }
                LoadData();
            }
        }
    }//GEN-LAST:event_btnThemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QLSukienKM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QLSukienKM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QLSukienKM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QLSukienKM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QLSukienKM().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThoat;
    private javax.swing.JButton btnXoa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JRadioButton rdbDong;
    private javax.swing.JRadioButton rdbMo;
    private javax.swing.JSpinner spinSoLuong;
    private javax.swing.JTable tabKhuyenmai;
    private javax.swing.JTextPane txtDipKM;
    private javax.swing.JTextField txtMaKM;
    private javax.swing.JTextField txtMucKM;
    // End of variables declaration//GEN-END:variables
}
