/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package KinhDoanh;

import DataBase.DBAccess;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import static LoginKH.DangNhap_1.sodienthoai;
import javax.swing.JTable;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author ASUS
 */
public class GioHang extends javax.swing.JFrame {
    Connection con;
    public PreparedStatement pet,pet1;
    public static ResultSet rs = null ,rs1 = null;
    public static double TongTien = 0;

    /**
     * Creates new form GioHang
     */
    public GioHang() {
        initComponents();
        LoadData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    public void LoadData () 
    {
        DBAccess acc = new DBAccess();
        if(sodienthoai == null)
        {
            try
            {
                rs = acc.Query("select GioHang.IDSP,TenSP,SoLuong,Topping,TongTienSP,Gia,IDGH from GioHang,Sanpham where Sanpham.IDSP = GioHang.IDSP and sodienthoai ='null' ORDER BY IDGH ");
                String [] arr1 = {"Mã giỏ hàng","Mã sản phẩm","Tên sản phẩm","Đơn giá","Số lượng","Topping","Tổng tiền sản phẩm"};
                DefaultTableModel model1 = new DefaultTableModel(arr1,0);
                while(rs.next())
                {
                    Vector vec = new Vector();
                    vec.add(rs.getInt("IDGH"));
                    vec.add(rs.getString("IDSP"));
                    vec.add(rs.getString("TenSP"));
                    vec.add(rs.getString("Gia"));
                    vec.add(rs.getInt("SoLuong")); 
                    vec.add(rs.getString("Topping"));
                    vec.add(rs.getInt("TongTienSP"));

                    model1.addRow(vec);
                }
                txtSDT.setVisible(false);
                txtIDGH.setEditable(false);
                tabGiohang.setModel(model1);
                rs1 = acc.Query("select sum(TongTienSP) as Tong from GioHang where sodienthoai = 'null' ");
                while(rs1.next())
                {
                    txtTongtien.setText(rs1.getString("Tong"));
                } 
                rs.close();
                rs1.close();
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(this, e.getMessage());
                e.printStackTrace();
            }
            setColumn();
        }
        else
        {
            try
            { 
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                String url = "jdbc:sqlserver://localhost:1433;Database=AppTraSua;user=DoanJava;password=12345";
                con = DriverManager.getConnection(url);
                String sql = "select sodienthoai,GioHang.IDSP,TenSP,SoLuong,Topping,TongTienSP,Gia,IDGH from GioHang,Sanpham where Sanpham.IDSP = GioHang.IDSP and sodienthoai = ? ";
                String sum = "select sum(TongTienSP) as Tong from GioHang where sodienthoai = ? " ;
                pet = con.prepareStatement(sql);
                pet1 = con.prepareStatement(sum);
                pet.setString(1, sodienthoai);
                pet1.setString(1, sodienthoai);
                rs = pet.executeQuery();
                rs1 = pet1.executeQuery();
                String [] arr = {"Mã giỏ hàng","Số điện thoại", "Mã sản phẩm","Tên sản phẩm","Đơn giá","Số lượng","Topping","Tổng tiền sản phẩm"};
                DefaultTableModel model = new DefaultTableModel(arr,0);
                while(rs.next())
                {
                    txtSDT.setText(rs.getString("sodienthoai"));
                    Vector vec = new Vector();
                    vec.add(rs.getInt("IDGH"));
                    vec.add(rs.getString("sodienthoai"));
                    vec.add(rs.getString("IDSP"));
                    vec.add(rs.getString("TenSP"));
                    vec.add(rs.getString("Gia"));
                    vec.add(rs.getInt("SoLuong")); 
                    vec.add(rs.getString("Topping"));
                    vec.add(rs.getInt("TongTienSP"));

                    model.addRow(vec);
                }
                tabGiohang.setModel(model);
                while(rs1.next())
                {
                    txtTongtien.setText(rs1.getString("Tong"));
                }
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(this, e.getMessage());
                e.printStackTrace();
            }
        }
        txtSDT.setEditable(false);
        txtIDSP.setEditable(false);
        txtTenSP.setEditable(false);
        txtTongtien.setEditable(false);
        txtGia.setEditable(false);
        setColumn();
        String ID = "null";
        acc.Update("update GioHang set IDHD = '"+ID+"' where sodienthoai = '"+sodienthoai+"'");
    }
    public void setColumn()
    {
        if(sodienthoai == null)
        {
            tabGiohang.getColumnModel().getColumn(0).setPreferredWidth(30);
            tabGiohang.getColumnModel().getColumn(1).setPreferredWidth(30);
            tabGiohang.getColumnModel().getColumn(2).setPreferredWidth(120);
            tabGiohang.getColumnModel().getColumn(3).setPreferredWidth(30);
            tabGiohang.getColumnModel().getColumn(4).setPreferredWidth(20);
            tabGiohang.getColumnModel().getColumn(5).setPreferredWidth(200);
            tabGiohang.getColumnModel().getColumn(6).setPreferredWidth(70);
            tabGiohang.setAutoResizeMode(JTable.AUTO_RESIZE_LAST_COLUMN);
        }
        else
        {
            tabGiohang.getColumnModel().getColumn(0).setPreferredWidth(20);
            tabGiohang.getColumnModel().getColumn(1).setPreferredWidth(40);
            tabGiohang.getColumnModel().getColumn(2).setPreferredWidth(30);
            tabGiohang.getColumnModel().getColumn(3).setPreferredWidth(120);
            tabGiohang.getColumnModel().getColumn(4).setPreferredWidth(30);
            tabGiohang.getColumnModel().getColumn(5).setPreferredWidth(20);
            tabGiohang.getColumnModel().getColumn(6).setPreferredWidth(200);
            tabGiohang.getColumnModel().getColumn(7).setPreferredWidth(70);
            tabGiohang.setAutoResizeMode(JTable.AUTO_RESIZE_LAST_COLUMN);
        }      
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabGiohang = new javax.swing.JTable();
        btnDathang = new javax.swing.JButton();
        btnThoat = new javax.swing.JButton();
        txtTongtien = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtSDT = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtTenSP = new javax.swing.JTextField();
        spinSoluong = new javax.swing.JSpinner();
        btnCapnhat = new javax.swing.JButton();
        panel = new javax.swing.JPanel();
        cbThach = new javax.swing.JCheckBox();
        cbBanhflan = new javax.swing.JCheckBox();
        cbPhomai = new javax.swing.JCheckBox();
        cbSuongsao = new javax.swing.JCheckBox();
        cbTranchau = new javax.swing.JCheckBox();
        cbKhucbach = new javax.swing.JCheckBox();
        lblThach = new javax.swing.JLabel();
        lblBanhFlan = new javax.swing.JLabel();
        lblPhomai = new javax.swing.JLabel();
        lblTranchau = new javax.swing.JLabel();
        lblKhucbach = new javax.swing.JLabel();
        lblSuongsao = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtGia = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtIDSP = new javax.swing.JTextField();
        btnXoa = new javax.swing.JButton();
        txtIDGH = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        btnDeleteAll = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Giỏ hàng");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 3, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("TocToc");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 0, 165, 60));

        tabGiohang.setBackground(new java.awt.Color(255, 255, 204));
        tabGiohang.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        tabGiohang.setForeground(new java.awt.Color(255, 0, 0));
        tabGiohang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã giỏ hàng ", "Số điện thoại", "Mã sản phẩm", "Tên sản phẩm", "Đơn giá", "Số lượng", "Topping", "Tổng giá sản phẩm"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabGiohang.setGridColor(new java.awt.Color(51, 51, 255));
        tabGiohang.setSelectionBackground(new java.awt.Color(153, 153, 255));
        tabGiohang.setSelectionForeground(new java.awt.Color(255, 0, 0));
        tabGiohang.getTableHeader().setReorderingAllowed(false);
        tabGiohang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabGiohangMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabGiohang);
        if (tabGiohang.getColumnModel().getColumnCount() > 0) {
            tabGiohang.getColumnModel().getColumn(5).setPreferredWidth(30);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, 990, 210));

        btnDathang.setBackground(new java.awt.Color(204, 0, 0));
        btnDathang.setForeground(new java.awt.Color(255, 255, 255));
        btnDathang.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Favorites/Favorites_16x16.png"))); // NOI18N
        btnDathang.setText("Đặt hàng");
        btnDathang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDathangActionPerformed(evt);
            }
        });
        getContentPane().add(btnDathang, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 540, -1, 35));

        btnThoat.setBackground(new java.awt.Color(255, 255, 204));
        btnThoat.setForeground(new java.awt.Color(0, 0, 204));
        btnThoat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Undo/Undo_16x16.png"))); // NOI18N
        btnThoat.setText("Exit");
        btnThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThoatActionPerformed(evt);
            }
        });
        getContentPane().add(btnThoat, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 480, -1, -1));

        txtTongtien.setToolTipText("");
        txtTongtien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTongtienActionPerformed(evt);
            }
        });
        getContentPane().add(txtTongtien, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 470, 100, 30));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Tổng tiền :");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 470, 110, 30));
        getContentPane().add(txtSDT, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, 120, -1));

        jLabel4.setForeground(new java.awt.Color(0, 0, 153));
        jLabel4.setText("Tên sản phẩm");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, -1, -1));

        jLabel5.setForeground(new java.awt.Color(0, 0, 153));
        jLabel5.setText("Số lượng");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 140, -1, -1));
        getContentPane().add(txtTenSP, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 140, 190, -1));

        spinSoluong.setModel(new javax.swing.SpinnerNumberModel(1, null, null, 1));
        getContentPane().add(spinSoluong, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 140, 60, -1));

        btnCapnhat.setBackground(new java.awt.Color(255, 255, 204));
        btnCapnhat.setForeground(new java.awt.Color(0, 0, 204));
        btnCapnhat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Upload/Upload_16x16.png"))); // NOI18N
        btnCapnhat.setText("Cập nhật");
        btnCapnhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapnhatActionPerformed(evt);
            }
        });
        getContentPane().add(btnCapnhat, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 480, -1, -1));

        panel.setBackground(new java.awt.Color(255, 255, 204));
        panel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thêm Topping", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 16), new java.awt.Color(204, 102, 0))); // NOI18N

        cbThach.setBackground(new java.awt.Color(255, 255, 204));
        cbThach.setText("Thạch");

        cbBanhflan.setBackground(new java.awt.Color(255, 255, 204));
        cbBanhflan.setText("Bánh flan");

        cbPhomai.setBackground(new java.awt.Color(255, 255, 204));
        cbPhomai.setText("Phô mai");

        cbSuongsao.setBackground(new java.awt.Color(255, 255, 204));
        cbSuongsao.setText("Sương sáo");

        cbTranchau.setBackground(new java.awt.Color(255, 255, 204));
        cbTranchau.setText("Trân châu");

        cbKhucbach.setBackground(new java.awt.Color(255, 255, 204));
        cbKhucbach.setText("Khúc bạch");

        lblThach.setText("2000");

        lblBanhFlan.setText("5000");

        lblPhomai.setText("5000");

        lblTranchau.setText("2000");

        lblKhucbach.setText("3000");

        lblSuongsao.setText("4000");

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbBanhflan)
                    .addComponent(cbPhomai)
                    .addComponent(cbThach))
                .addGap(18, 18, 18)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblThach)
                    .addComponent(lblBanhFlan)
                    .addComponent(lblPhomai))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbTranchau)
                    .addComponent(cbSuongsao)
                    .addComponent(cbKhucbach))
                .addGap(28, 28, 28)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblSuongsao)
                    .addComponent(lblTranchau)
                    .addComponent(lblKhucbach))
                .addGap(29, 29, 29))
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbThach)
                    .addComponent(cbSuongsao)
                    .addComponent(lblThach)
                    .addComponent(lblSuongsao))
                .addGap(18, 18, 18)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbBanhflan)
                    .addComponent(cbTranchau)
                    .addComponent(lblBanhFlan)
                    .addComponent(lblTranchau))
                .addGap(18, 18, 18)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbPhomai)
                    .addComponent(cbKhucbach)
                    .addComponent(lblPhomai)
                    .addComponent(lblKhucbach))
                .addGap(20, 20, 20))
        );

        getContentPane().add(panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 70, 380, 160));

        jLabel7.setForeground(new java.awt.Color(0, 0, 153));
        jLabel7.setText("Đơn giá");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 190, -1, -1));
        getContentPane().add(txtGia, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 190, 115, -1));

        jLabel8.setForeground(new java.awt.Color(0, 0, 153));
        jLabel8.setText("Mã sản phẩm");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, -1, -1));
        getContentPane().add(txtIDSP, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 90, 90, -1));

        btnXoa.setBackground(new java.awt.Color(255, 255, 204));
        btnXoa.setForeground(new java.awt.Color(0, 0, 204));
        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Delete/Delete_16x16.png"))); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        getContentPane().add(btnXoa, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 480, -1, -1));

        txtIDGH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDGHActionPerformed(evt);
            }
        });
        getContentPane().add(txtIDGH, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 90, 90, -1));

        jLabel6.setBackground(new java.awt.Color(255, 255, 0));
        jLabel6.setForeground(new java.awt.Color(0, 0, 153));
        jLabel6.setText("Mã giỏ hàng");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 90, 80, -1));

        btnDeleteAll.setBackground(new java.awt.Color(255, 255, 204));
        btnDeleteAll.setForeground(new java.awt.Color(0, 0, 204));
        btnDeleteAll.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Remove/Remove_16x16.png"))); // NOI18N
        btnDeleteAll.setText("Xóa tất cả");
        btnDeleteAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteAllActionPerformed(evt);
            }
        });
        getContentPane().add(btnDeleteAll, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 480, -1, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/imagesGioHang.jpg"))); // NOI18N
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1026, 600));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtTongtienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTongtienActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTongtienActionPerformed

    private void btnThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThoatActionPerformed
        // TODO add your handling code here:
        Product frm = new Product();
        this.setVisible(false);
        frm.setVisible(true);
    }//GEN-LAST:event_btnThoatActionPerformed

    private void tabGiohangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabGiohangMouseClicked
        // TODO add your handling code here:
        int i = tabGiohang.getSelectedRow();
        TableModel model = tabGiohang.getModel();
        String IDGH = model.getValueAt(i, 0).toString();
        String phomai = "Phô mai";
        String thach = "Thạch";
        String suongsao = "Sương sáo";
        String banhflan = "Bánh flan";
        String khucbach = "Khúc bạch";
        String tranchau = "Trân châu";
        DBAccess acc = new DBAccess();
        if(sodienthoai != null)
        {
            txtSDT.setText(model.getValueAt(i, 1).toString());
            txtIDSP.setText(model.getValueAt(i, 2).toString());
            txtTenSP.setText(model.getValueAt(i, 3).toString());
            txtGia.setText(model.getValueAt(i, 4).toString());
            spinSoluong.setValue(model.getValueAt(i, 5).hashCode());
            txtIDGH.setText(model.getValueAt(i, 0).toString());
            try {
                if(phomai != "")
                {
                    rs = acc.Query("select Topping from GioHang where Topping like  N'%"+phomai+"%' and IDGH = '"+IDGH+"' ") ;
                    if(rs.next())
                    {
                        cbPhomai.setSelected(true);
                    }
                    else
                    {
                        cbPhomai.setSelected(false);
                    }
                }
                
                if(thach != "")
                {
                    rs = acc.Query("select Topping from GioHang where Topping like  N'%"+thach+"%' and IDGH = '"+IDGH+"' ");
                    if(rs.next())
                    {
                        cbThach.setSelected(true);
                    }
                    else
                    {
                        cbThach.setSelected(false);
                    }
                } 
                
                if(suongsao != "")
                {
                    rs = acc.Query("select Topping from GioHang where Topping like  N'%"+suongsao+"%' and IDGH = '"+IDGH+"' ");
                    if(rs.next())
                    {
                        cbSuongsao.setSelected(true);
                    }
                    else
                    {
                        cbSuongsao.setSelected(false);
                    }
                } 
                if(banhflan != "")
                {
                    rs = acc.Query("select Topping from GioHang where Topping like  N'%"+banhflan+"%' and IDGH = '"+IDGH+"' ");
                    if(rs.next())
                    {
                        cbBanhflan.setSelected(true);
                    }
                    else
                    {
                        cbBanhflan.setSelected(false);
                    }
                }
                
                if(tranchau != "")
                {
                    rs = acc.Query("select Topping from GioHang where Topping like  N'%"+tranchau+"%' and IDGH = '"+IDGH+"' ");
                    if(rs.next())
                    {
                        cbTranchau.setSelected(true);
                    }
                    else
                    {
                        cbTranchau.setSelected(false);
                    }
                } 
                
                if(khucbach != "")
                {
                    rs = acc.Query("select Topping from GioHang where Topping like  N'%"+khucbach+"%' and IDGH = '"+IDGH+"' ");
                    if(rs.next())
                    {
                        cbKhucbach.setSelected(true);
                    }
                    else
                    {
                        cbKhucbach.setSelected(false);
                    }
                } 
            } 
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(this, e.getMessage());
                e.printStackTrace();
            }
        }
        else
        {
            txtIDSP.setText(model.getValueAt(i, 1).toString());
            txtTenSP.setText(model.getValueAt(i, 2).toString());
            txtGia.setText(model.getValueAt(i, 3).toString());
            spinSoluong.setValue(model.getValueAt(i, 4).hashCode());
            txtIDGH.setText(model.getValueAt(i, 0).toString());
            try {
                if(phomai != "")
                {
                    rs = acc.Query("select Topping from GioHang where Topping like  N'%"+phomai+"%' and IDGH = '"+IDGH+"' ") ;
                    if(rs.next())
                    {
                        cbPhomai.setSelected(true);
                    }
                    else
                    {
                        cbPhomai.setSelected(false);
                    }
                }
                
                if(thach != "")
                {
                    rs = acc.Query("select Topping from GioHang where Topping like  N'%"+thach+"%' and IDGH = '"+IDGH+"' ");
                    if(rs.next())
                    {
                        cbThach.setSelected(true);
                    }
                    else
                    {
                        cbThach.setSelected(false);
                    }
                } 
                
                if(suongsao != "")
                {
                    rs = acc.Query("select Topping from GioHang where Topping like  N'%"+suongsao+"%' and IDGH = '"+IDGH+"' ");
                    if(rs.next())
                    {
                        cbSuongsao.setSelected(true);
                    }
                    else
                    {
                        cbSuongsao.setSelected(false);
                    }
                } 
                if(banhflan != "")
                {
                    rs = acc.Query("select Topping from GioHang where Topping like  N'%"+banhflan+"%' and IDGH = '"+IDGH+"' ");
                    if(rs.next())
                    {
                        cbBanhflan.setSelected(true);
                    }
                    else
                    {
                        cbBanhflan.setSelected(false);
                    }
                }
                
                if(tranchau != "")
                {
                    rs = acc.Query("select Topping from GioHang where Topping like  N'%"+tranchau+"%' and IDGH = '"+IDGH+"' ");
                    if(rs.next())
                    {
                        cbTranchau.setSelected(true);
                    }
                    else
                    {
                        cbTranchau.setSelected(false);
                    }
                } 
                
                if(khucbach != "")
                {
                    rs = acc.Query("select Topping from GioHang where Topping like  N'%"+khucbach+"%' and IDGH = '"+IDGH+"' ");
                    if(rs.next())
                    {
                        cbKhucbach.setSelected(true);
                    }
                    else
                    {
                        cbKhucbach.setSelected(false);
                    }
                } 
            } 
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(this, e.getMessage());
                e.printStackTrace();
            }
        }
        
        //cbThach.setText(model.getColumnCount(Thac;
      //  cbBanhflan.setText(model.getValueAt(i, 5).toString());
       // cbPhomai.setText(model.getValueAt(i, 5).toString());
    }//GEN-LAST:event_tabGiohangMouseClicked

    private void btnDathangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDathangActionPerformed
        // TODO add your handling code here:
        DBAccess acc = new DBAccess();
        TongTien = Double.parseDouble(txtTongtien.getText()) ;
        if(sodienthoai == null)
        {
            LoaiGiaoHang frm = new LoaiGiaoHang();
            this.setVisible(false);
            frm.setVisible(true);
        }
        else
        {
            rs = acc.Query("insert into QLGioHang(sodienthoai, IDSP, SoLuong,Topping,TongTienSP,IDHD)\n" +
                            "select sodienthoai,IDSP,SoLuong,Topping,TongTienSP,IDHD\n" +
                            "from GioHang where IDHD = 'null' and sodienthoai = '"+sodienthoai+"'");
            ThanhToanOL frm = new ThanhToanOL();
            this.setVisible(false);
            frm.setVisible(true);
        }      
    }//GEN-LAST:event_btnDathangActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        DBAccess acc = new DBAccess();
        acc.connect();
        int remove = tabGiohang.getSelectedRow();
        if(remove == -1)
        {
            JOptionPane.showMessageDialog(null, "vui lòng chọn 1 dòng để xóa !!!");
        }
        else
        {
            try {
                String IDGH = txtIDGH.getText();
                acc.deleteGH(IDGH);
            } catch (SQLException ex) {
                Logger.getLogger(GioHang.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        LoadData();
        setColumn();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnCapnhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapnhatActionPerformed
        // TODO add your handling code here:
        DBAccess acc = new DBAccess();
        acc.connect();
        if(sodienthoai != null)
        {
            if(spinSoluong.getValue().hashCode() > 10 || spinSoluong.getValue().hashCode() <= 0)
            {
                JOptionPane.showMessageDialog(this, "Số lượng sản phẩm ngoài khả năng !!!");
            }
            else
            { 
                String IDSP = txtIDSP.getText();
                int SoLuong = (int) spinSoluong.getValue();
                String sodienthoai = txtSDT.getText();
                int Gia = Integer.parseInt(txtGia.getText());
                int IDGH = Integer.parseInt(txtIDGH.getText());
                String IDHD = "null";
                String Thach = null ;
                String BanhFlan = null;
                String Phomai = null;
                String SuongSao = null;
                String TranChau = null;
                String KhucBach = null;
                String Topping = "";
                int GThach = 0;
                int GBanhFlan = 0;
                int GPhomai = 0;
                int GSuongsao = 0;
                int GTranChau = 0;
                int GKhucBach = 0;
                if(cbThach.isSelected() == false && cbBanhflan.isSelected() == false && cbPhomai.isSelected() == false && cbSuongsao.isSelected() == false && cbTranchau.isSelected() == false && cbKhucbach.isSelected() == false)
                {
                    Topping = "Không có" ;
                }
                else
                {
                    if(cbThach.isSelected() == true)
                    {
                        Thach = cbThach.getText();
                        GThach = Integer.parseInt(lblThach.getText());
                    }
                    if(cbBanhflan.isSelected() == true)
                    {
                        BanhFlan = cbBanhflan.getText();
                        GBanhFlan = Integer.parseInt(lblBanhFlan.getText());
                    }
                    if(cbPhomai.isSelected() == true)
                    {
                        Phomai = cbPhomai.getText();
                        GPhomai = Integer.parseInt(lblPhomai.getText());
                    }
                    if(cbSuongsao.isSelected() == true)
                    {
                        SuongSao = cbSuongsao.getText();
                        GSuongsao = Integer.parseInt(lblSuongsao.getText());
                    }
                    if(cbTranchau.isSelected() == true)
                    {
                        TranChau = cbTranchau.getText();
                        GTranChau = Integer.parseInt(lblTranchau.getText());
                    }
                    if(cbKhucbach.isSelected() == true)
                    {
                        KhucBach = cbKhucbach.getText();
                        GKhucBach = Integer.parseInt(lblKhucbach.getText());
                    }
                    String tp1 = "";
                    String tp2 = "";
                    String tp3 = "";
                    String tp4 = "";
                    String tp5 = "";
                    String tp6 = "";
                    if(Thach != null)
                    {
                        tp1 = Thach + ",";
                    }
                    if(BanhFlan != null)
                    {
                        tp2 = BanhFlan + ",";
                    }
                    if(Phomai != null)
                    {
                        tp3 = Phomai + ",";
                    }
                    if(SuongSao != null)
                    {
                        tp4 = SuongSao + ",";
                    }
                    if(TranChau != null)
                    {
                        tp5 = TranChau + ",";
                    }
                    if(KhucBach != null)
                    {
                        tp6 = KhucBach + ".";
                    }
                    Topping = tp1 + tp2 + tp3 + tp4 + tp5 + tp6 ;
                }  
                int TongTienSP = 0;
                TongTienSP = (SoLuong * (GThach + GBanhFlan + GPhomai + GSuongsao + GTranChau + GKhucBach)) + (SoLuong * Gia) ;
                try {
                    acc.UpdateGH(IDGH,sodienthoai,IDSP,SoLuong,Topping,TongTienSP);
                    acc.UpdateGH2(IDHD);
                } catch (SQLException ex) {
                    Logger.getLogger(GioHang.class.getName()).log(Level.SEVERE, null, ex);
                }
                LoadData();
            }
            setColumn();
        }
        else
        {
            if(spinSoluong.getValue().hashCode() > 10 || spinSoluong.getValue().hashCode() <= 0)
            {
                JOptionPane.showMessageDialog(this, "Số lượng sản phẩm ngoài khả năng !!!");
            }
            else
            { 
                String IDSP = txtIDSP.getText();
                int SoLuong = (int) spinSoluong.getValue();
                String sodienthoai = "null";
                int Gia = Integer.parseInt(txtGia.getText());
                int IDGH = Integer.parseInt(txtIDGH.getText());
                String Thach = null ;
                String BanhFlan = null;
                String Phomai = null;
                String SuongSao = null;
                String TranChau = null;
                String KhucBach = null;
                String Topping = "";
                int GThach = 0;
                int GBanhFlan = 0;
                int GPhomai = 0;
                int GSuongsao = 0;
                int GTranChau = 0;
                int GKhucBach = 0;
                if(cbThach.isSelected() == false && cbBanhflan.isSelected() == false && cbPhomai.isSelected() == false && cbSuongsao.isSelected() == false && cbTranchau.isSelected() == false && cbKhucbach.isSelected() == false)
                {
                    Topping = "Không có" ;
                }
                else
                {
                    if(cbThach.isSelected() == true)
                    {
                        Thach = cbThach.getText();
                        GThach = Integer.parseInt(lblThach.getText());
                    }
                    if(cbBanhflan.isSelected() == true)
                    {
                        BanhFlan = cbBanhflan.getText();
                        GBanhFlan = Integer.parseInt(lblBanhFlan.getText());
                    }
                    if(cbPhomai.isSelected() == true)
                    {
                        Phomai = cbPhomai.getText();
                        GPhomai = Integer.parseInt(lblPhomai.getText());
                    }
                    if(cbSuongsao.isSelected() == true)
                    {
                        SuongSao = cbSuongsao.getText();
                        GSuongsao = Integer.parseInt(lblSuongsao.getText());
                    }
                    if(cbTranchau.isSelected() == true)
                    {
                        TranChau = cbTranchau.getText();
                        GTranChau = Integer.parseInt(lblTranchau.getText());
                    }
                    if(cbKhucbach.isSelected() == true)
                    {
                        KhucBach = cbKhucbach.getText();
                        GKhucBach = Integer.parseInt(lblKhucbach.getText());
                    }
                    String tp1 = "";
                    String tp2 = "";
                    String tp3 = "";
                    String tp4 = "";
                    String tp5 = "";
                    String tp6 = "";
                    if(Thach != null)
                    {
                        tp1 = Thach + ",";
                    }
                    if(BanhFlan != null)
                    {
                        tp2 = BanhFlan + ",";
                    }
                    if(Phomai != null)
                    {
                        tp3 = Phomai + ",";
                    }
                    if(SuongSao != null)
                    {
                        tp4 = SuongSao + ",";
                    }
                    if(TranChau != null)
                    {
                        tp5 = TranChau + ",";
                    }
                    if(KhucBach != null)
                    {
                        tp6 = KhucBach + ".";
                    }
                    Topping = tp1 + tp2 + tp3 + tp4 + tp5 + tp6 ;
                }  
                int TongTienSP = 0;
                TongTienSP = (SoLuong * (GThach + GBanhFlan + GPhomai + GSuongsao + GTranChau + GKhucBach)) + (SoLuong * Gia) ;
                try {
                    acc.UpdateGH(IDGH,sodienthoai,IDSP,SoLuong,Topping,TongTienSP);
                    acc.Update("update GioHangTC set sodienthoai = '"+sodienthoai+"',IDSP = '"+IDSP+"', SoLuong = '"+SoLuong+"',Topping = N'"+Topping+"',TongTienSP = '"+TongTienSP+"' where IDGH = '"+IDGH+"'  ");
                } catch (SQLException ex) {
                    Logger.getLogger(GioHang.class.getName()).log(Level.SEVERE, null, ex);
                }
                LoadData();     
            }
            setColumn();
        }
    }//GEN-LAST:event_btnCapnhatActionPerformed

    private void txtIDGHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDGHActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDGHActionPerformed

    private void btnDeleteAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteAllActionPerformed
        // TODO add your handling code here:
        setColumn();
        DBAccess acc = new DBAccess();
        if(sodienthoai != null)
        {
            acc.Query("delete from GioHang where sodienthoai = '"+sodienthoai+"'");
        }
        else
        {
            acc.Query("delete from GioHang where sodienthoai = 'null'");
        }
        LoadData();
    }//GEN-LAST:event_btnDeleteAllActionPerformed

     /* @param args the command line arguments*/
     
        public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
       /* try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GioHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GioHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GioHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GioHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() 
            {
                new GioHang().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCapnhat;
    private javax.swing.JButton btnDathang;
    private javax.swing.JButton btnDeleteAll;
    private javax.swing.JButton btnThoat;
    private javax.swing.JButton btnXoa;
    private javax.swing.JCheckBox cbBanhflan;
    private javax.swing.JCheckBox cbKhucbach;
    private javax.swing.JCheckBox cbPhomai;
    private javax.swing.JCheckBox cbSuongsao;
    private javax.swing.JCheckBox cbThach;
    private javax.swing.JCheckBox cbTranchau;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblBanhFlan;
    private javax.swing.JLabel lblKhucbach;
    private javax.swing.JLabel lblPhomai;
    private javax.swing.JLabel lblSuongsao;
    private javax.swing.JLabel lblThach;
    private javax.swing.JLabel lblTranchau;
    private javax.swing.JPanel panel;
    private javax.swing.JSpinner spinSoluong;
    private javax.swing.JTable tabGiohang;
    private javax.swing.JTextField txtGia;
    private javax.swing.JTextField txtIDGH;
    private javax.swing.JTextField txtIDSP;
    private javax.swing.JTextField txtSDT;
    private javax.swing.JTextField txtTenSP;
    private javax.swing.JTextField txtTongtien;
    // End of variables declaration//GEN-END:variables
}
